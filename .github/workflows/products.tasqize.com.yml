name: products.tasqize.com

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        type: choice
        options:
          - staging
          - production
        default: staging
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: smallize/tasqize    # или просто оставьте repo по умолчанию, если Actions в том же репо
        token: ${{ secrets.REPO_TOKEN }}
        submodules: true
        fetch-depth: 0

    # 2. Ставим Hugo (extended)
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: "0.135.0"
        extended: true

    - name: Determine Base URL
      id: base-url
      run: |
        if [ "${{ github.event.inputs.environment }}" = "production" ]; then
          echo "url=https://products.tasqize.com" >> $GITHUB_OUTPUT
        else
          echo "url=https://products-qa.tasqize.com" >> $GITHUB_OUTPUT
        fi

    - name: Build Hugo site
      run: >
        hugo
        --config "configs/products.tasqize.com.toml","configs/common.tasqize.com.toml"
        -b "${{ steps.base-url.outputs.url }}"
        --cleanDestinationDir
        --minify
        --templateMetrics
        --templateMetricsHints
        --enableGitInfo
        --logLevel debug

    - name: Debug build output
      run: ls -lah public

    - name: Deploy to S3
      run: |
        aws s3 sync public/ s3://products.tasqize.com/ --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}

    - name: Invalidate CloudFront (production only)
      if: ${{ github.event.inputs.environment == 'production' }}
      run: |
        aws cloudfront create-invalidation \
          --distribution-id "E22S1461NWKX4Z" \
          --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS }}
